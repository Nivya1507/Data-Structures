#include <stdio.h>

#define MAX 100

int arr[MAX];
int n = 0; // current size of the array

void display() {
    if (n == 0)
        printf("Array is empty.\n");
    else {
        printf("Array elements: ");
        for (int i = 0; i < n; i++)
            printf("%d ", arr[i]);
        printf("\n");
    }
}

void insert(int pos, int val) {
    if (n == MAX)
        printf("Array is full, cannot insert.\n");
    else if (pos < 0 || pos > n)
        printf("Invalid position!\n");
    else {
        for (int i = n; i > pos; i--)
            arr[i] = arr[i - 1];
        arr[pos] = val;
        n++;
        printf("Inserted %d at position %d\n", val, pos);
    }
}

void deleteElement(int pos) {
    if (n == 0)
        printf("Array is empty, cannot delete.\n");
    else if (pos < 0 || pos >= n)
        printf("Invalid position!\n");
    else {
        printf("Deleted element: %d\n", arr[pos]);
        for (int i = pos; i < n - 1; i++)
            arr[i] = arr[i + 1];
        n--;
    }
}

int main() {
    int choice, pos, val;

    while (1) {
        printf("\n--- Array Operations ---\n");
        printf("1. Insert\n2. Delete\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("Enter position (0 to %d): ", n);
            scanf("%d", &pos);
            printf("Enter value: ");
            scanf("%d", &val);
            insert(pos, val);
            break;
        case 2:
            printf("Enter position (0 to %d): ", n - 1);
            scanf("%d", &pos);
            deleteElement(pos);
            break;
        case 3:
            display();
            break;
        case 4:
            return 0;
        default:
            printf("Invalid choice! Try again.\n");
        }
    }
}
